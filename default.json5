{
  $schema: "https://docs.renovatebot.com/renovate-schema.json",
  description: "This config defines the default Renovate rules that will be used in HiveMQ Product repos.",
  extends: [
    "config:recommended",
    "schedule:weekends",
    "schedule:automergeNonOfficeHours",
    ":noUnscheduledUpdates"
  ],
  enabledManagers: [
    "gradle",
    "dockerfile",
    "github-actions",
    "npm",
    "regex",
  ],
  "customManagers": [
    {
      customType: "regex",
      datasourceTemplate: "docker",
      description: "Custom Manager for OCI images",
      fileMatch: [
        "build.gradle.kts"
      ],
      matchStrings: [
        "runtime\\(\"(?:library[:/])?(?<packageName>.+):(?:sha256!)(?<currentDigest>.+)\"\\)",
        "runtime\\(\"(?:library[:/])?(?<packageName>.+):(?<currentValue>.+)\"\\)"
      ],
      versioningTemplate: "docker",
    }
  ],
  hostRules: [
    {
      matchHost: "https://maven.pkg.github.com/hivemq/hivemq-commons",
      username: "hivemq-jenkins",
      "token": "{{ secrets.GITHUB_TOKEN_HIVEMQ_JENKINS }}",
    },
    {
      matchHost: "https://maven.pkg.github.com/hivemq/vaadin-chartjs",
      username: "hivemq-jenkins",
      "token": "{{ secrets.GITHUB_TOKEN_HIVEMQ_JENKINS }}",
    },
    {
      matchHost: "npm.pkg.github.com",
      hostType: "npm",
      "token": "{{ secrets.GITHUB_TOKEN_HIVEMQ_JENKINS }}",
    },
  ],
  major: {
    dependencyDashboardApproval: true,
  },
  pinDigests: true,
  labels: [
    "renovate",
  ],
  dependencyDashboardLabels: [
    "renovate",
  ],
  packageRules: [
    {
      matchPackageNames: [
        "io.confluent:*",
        "org.apache.kafka:*",
      ],
      registryUrls: [
        "https://packages.confluent.io/maven",
      ],
    },
    {
      matchPackageNames: [
        "com.hivemq.commons:*",
      ],
      registryUrls: [
        "https://maven.pkg.github.com/hivemq/hivemq-commons",
      ],
    },
    {
      matchPackageNames: [
        "com.byteowls:*",
      ],
      registryUrls: [
        "https://maven.pkg.github.com/hivemq/vaadin-chartjs",
      ],
    },
    {
      matchUpdateTypes: [
        "minor",
      ],
      matchCurrentVersion: "!/^0/",
      groupName: "all minor dependencies",
      groupSlug: "all-minor",
    },
    {
      matchUpdateTypes: [
        "patch",
      ],
      matchCurrentVersion: "!/^0/",
      groupName: "all patch dependencies",
      groupSlug: "all-patch",
      automerge: true,
      platformAutomerge: false,
    },
    {
      matchManagers: [
        "npm",
      ],
      matchUpdateTypes: [
        "minor",
      ],
      matchCurrentVersion: "!/^0/",
      groupName: "all minor npm dependencies",
      groupSlug: "all-minor-npm",
    },
    {
      matchManagers: [
        "npm",
      ],
      matchUpdateTypes: [
        "patch",
      ],
      matchCurrentVersion: "!/^0/",
      groupName: "all patch npm dependencies",
      groupSlug: "all-patch-npm",
      automerge: true,
      platformAutomerge: false,
    },
    {
      matchCurrentVersion: "/^0/",
      dependencyDashboardApproval: true,
    },
    // avoid updating xodus dependencies - marked to be deprecated soon
    {
      matchPackageNames: [
        "org.jetbrains.xodus:*",
      ],
      enabled: false,
    },
    // rocksdb can't be updated automatically - requires deep analysis
    {
      matchPackageNames: [
        "org.rocksdb:*",
      ],
      enabled: false,
    },
    // jgroups can't be updated automatically - requires deep analysis
    {
      matchPackageNames: [
        "org.jgroups:*",
      ],
      enabled: false,
    },
    {
      matchPackageNames: [
        "io.netty:*",
      ],
      matchUpdateTypes: [
        "minor",
        "patch",
      ],
      groupName: "non-major netty dependencies",
      groupSlug: "non-major-netty",
    },
    {
      matchPackageNames: [
        "/^io\\.opentelemetry[.:].*/",
      ],
      ignoreUnstable: false,
      groupName: "opentelemetry dependencies",
      groupSlug: "opentelemetry",
    },
    // 8.14.3 is the latest version that still has the Apache v2 license. So, we can't upgrade to versions greater than that.
    {
      matchPackageNames: [
        "com.vaadin:*",
      ],
      matchCurrentVersion: "[8.14.3,)",
      allowedVersions: "<=8.14.3",
    },
    // avoid kafka versions with commercial licenses i.e. versions with 'ce' suffixes
    {
      matchPackageNames: [
        "org.apache.kafka:*",
      ],
      allowedVersions: "!/ce$/",
    },
    // avoid jctools version with 'ea' suffix
    // https://github.com/JCTools/JCTools/issues/360
    {
      matchPackageNames: [
        "org.jctools:*",
      ],
      allowedVersions: "!/ea$/",
    },
    // avoid updating HiveMQ SDKs
    {
      matchPackageNames: [
        "/^com\\.hivemq[.:].*-sdk$/",
      ],
      enabled: false,
    },
    // avoid updating Gradle Enterprise plugins as these need to be updated in sync
    {
      "matchPackageNames": [
        "com.gradle.develocity:com.gradle.develocity.gradle.plugin",
        "com.gradle.enterprise:com.gradle.enterprise.gradle.plugin",
        "com.gradle.common-custom-user-data-gradle-plugin:com.gradle.common-custom-user-data-gradle-plugin.gradle.plugin",
      ],
      enabled: false,
    },
    // GitHub Actions major
    {
      matchManagers: [
        "github-actions",
      ],
      matchUpdateTypes: [
        "major",
      ],
      groupName: "all major GitHub Actions dependencies",
      groupSlug: "all-major-github-actions",
      dependencyDashboardApproval: false,
    },
    // GitHub Actions minor & patch
    {
      matchManagers: [
        "github-actions",
      ],
      matchUpdateTypes: [
        "minor",
        "patch",
        "digest",
      ],
      groupName: "all non-major GitHub Actions dependencies",
      groupSlug: "all-non-major-github-actions",
      automerge: true,
      platformAutomerge: false,
    },
  ],
}
